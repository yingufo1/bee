package com.bee.algorithms.math;/** * 829. 连续整数求和 * * @author yangying * @version 1.0 * @since 2022/6/3 **/public class ConsecutiveNumbersSum {    /**     * 输入: n = 5     * 输出: 2     * 解释: 5 = 2 + 3，共有两组连续整数([5],[2,3])求和后为 5。     *     * 输入: n = 9     * 输出: 3     * 解释: 9 = 4 + 5 = 2 + 3 + 4     *     * @param n     * @return     */    public int consecutiveNumbersSum(int n) {        int ans = 0;        int bound = 2 * n;        for (int k = 1; k * (k + 1) <= bound; k++) {            if (isKConsecutive(n, k)) {                ans++;            }        }        return ans;    }    public boolean isKConsecutive(int n, int k) {        if (k % 2 == 1) {            return n % k == 0;        } else {            return n % k != 0 && 2 * n % k == 0;        }    }}