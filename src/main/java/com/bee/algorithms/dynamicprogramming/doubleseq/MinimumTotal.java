package com.bee.algorithms.dynamicprogramming.doubleseq;import java.util.ArrayList;import java.util.List;import java.util.Random;/** * 剑指 Offer II 100. 三角形中最小路径之和：https://leetcode.cn/problems/IlPe0q/ * * * @author yangying * @version 1.0 * @since 2022/6/5 **/public class MinimumTotal {    public int minimumTotal(List<List<Integer>> triangle) {        int m = triangle.size();        List<List<Integer>> minTotal = new ArrayList<>(m);        for(int i = m-1;i>=0;i--){            minimumTotal(triangle,i,minTotal);        }        return minTotal.get(m-1).get(0);    }    private void minimumTotal(List<List<Integer>> triangle,int index,List<List<Integer>> minTotal){        List<Integer> min = new ArrayList<>(triangle.get(index).size());        if(index == triangle.size()-1){            min.addAll(triangle.get(index));            minTotal.add(min);            return;        }        for(int i=0;i<triangle.get(index).size();i++){            int cur = triangle.get(index).get(i);            min.add(Math.min(cur+minTotal.get(triangle.size()-1-index-1).get(i),cur+minTotal.get(triangle.size()-1-index-1).get(i+1)));        }        minTotal.add(min);    }}