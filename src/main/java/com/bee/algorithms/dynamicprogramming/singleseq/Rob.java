package com.bee.algorithms.dynamicprogramming.singleseq;/** * 剑指 Offer II 089. 房屋偷盗：https://leetcode.cn/problems/Gu0c2T/ * * @author yangying * @version 1.0 * @since 2022/6/2 **/public class Rob {    public int rob(int[] nums) {        int n = nums.length;        if (n == 0) {            return 0;        }        if (n == 1) {            return nums[0];        }        int max1 = rob(nums, 0, n - 2);        int max2 = rob(nums, 1, n - 1);        return Math.max(max1, max2);    }    private int rob(int[] nums, int start, int end) {        int n = end - start + 1;        int[] dp = new int[n + 1];        dp[0] = 0;        dp[1] = nums[start];        for (int i = 2; i <= n; i++) {            dp[i] = Math.max(dp[i - 1], dp[i - 2] + nums[start + i - 1]);        }        return dp[n];    }}