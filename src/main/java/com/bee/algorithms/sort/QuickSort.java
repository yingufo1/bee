package com.bee.algorithms.sort;import java.util.Arrays;/** * 快速排序实现 * * @author yangying * @version 1.0 * @since 2022/5/31 **/public class QuickSort {    public void quickSort(int[] nums) {        int n = nums.length;        quickSort(nums, 0, n - 1);    }    private void quickSort(int[] nums, int low, int high) {        if (low >= high) {            return;        }        int p = partition(nums, low, high);        quickSort(nums, 0, p - 1);        quickSort(nums, p + 1, high);    }    private int partition(int[] nums, int low, int high) {        int pivot = nums[high];        int i = low - 1;        for (int j = low; j < high; j++) {            if (nums[j] < pivot) {                i++;                swap(nums, i, j);            }        }        i++;        swap(nums, i, high);        return i;    }    private void swap(int[] nums, int i, int j) {        int temp = nums[i];        nums[i] = nums[j];        nums[j] = temp;    }    public static void main(String[] args) {        QuickSort quickSort = new QuickSort();        int[] nums = new int[]{1, 3, 5, 7, 6, 0, 2, 4};        quickSort.quickSort(nums);        System.out.println(Arrays.toString(nums));    }}