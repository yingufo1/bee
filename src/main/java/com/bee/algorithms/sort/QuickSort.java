package com.bee.algorithms.sort;import java.util.Arrays;/** * 快速排序实现 * * @author yangying * @version 1.0 * @since 2022/5/31 **/public class QuickSort {    public void quickSort(int[] array){        quickSort(array,0,array.length-1);    }    private void quickSort(int[] array,int left,int right){        if(left>=right){            return;        }        int pivot = partion(array,left,right);        quickSort(array,0,pivot-1);        quickSort(array,pivot+1,right);    }    private int partion(int[] array,int left,int right){        int pivot = array[right];        int i = left-1;        for(int j=left;j<right;j++){            if(array[j] < pivot){                i++;                swap(array,j,i);            }        }        i++;        swap(array,i,right);        return i;    }    private void swap(int[] nums, int i, int j) {        int temp = nums[i];        nums[i] = nums[j];        nums[j] = temp;    }    public static void main(String[] args) {        QuickSort quickSort = new QuickSort();        int[] nums = new int[]{1, 3, 5, 7, 6, 0, 2, 4};        quickSort.quickSort(nums);        System.out.println(Arrays.toString(nums));    }}