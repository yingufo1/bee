package com.bee.algorithms.backtracing;import java.util.*;/** * 剑指 Offer II 082. 含有重复元素集合的组合:https://leetcode.cn/problems/4sjJUc/ * * @author yangying * @version 1.0 * @since 2022/5/31 **/public class CombinationSum2 {    public List<List<Integer>> combinationSum2(int[] candidates, int target) {        Arrays.sort(candidates);        List<List<Integer>> result = new ArrayList<>();        Set<Integer> selectedIndex = new HashSet<>();        sum(candidates, target, 0, result, new ArrayList<>());        return result;    }    private void sum(int[] candidates, int target, int index, List<List<Integer>> result, List<Integer> subset) {        if (target == 0) {            result.add(new ArrayList<>(subset));        } else if (index < candidates.length && target > 0) {            sum(candidates, target, getNext(candidates, index), result, subset);            subset.add(candidates[index]);            sum(candidates,target-candidates[index],getNext(candidates,index),result,subset);            subset.remove(subset.size()-1);        }    }    private int getNext(int[] nums, int index) {        int next = index;        while (next < nums.length && nums[next] == nums[index]) {            next++;        }        return next;    }}