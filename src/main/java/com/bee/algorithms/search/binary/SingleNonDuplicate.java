package com.bee.algorithms.search.binary;/** * 剑指 Offer II 070. 排序数组中只出现一次的数字:https://leetcode.cn/problems/skFtm2/ * * @author yangying * @version 1.0 * @since 2022/5/30 **/public class SingleNonDuplicate {    public int singleNonDuplicate(int[] nums) {        int n = nums.length;        if (nums[0] != nums[1]) {            return nums[0];        }        if (nums[n - 1] != nums[n - 2]) {            return nums[n - 1];        }        int ans = search(nums, 1, n - 2);        return nums[ans];    }    private int search(int[] nums, int left, int right) {        if (left > right) {            return -1;        }        int mid = (left + right) / 2;        if (nums[mid] != nums[mid - 1] && nums[mid] != nums[mid + 1]) {            return mid;        }        int ans = -1;        ans = search(nums, left, mid - 1);        if (ans >= 0) {            return ans;        }        ans = search(nums, mid + 1, right);        if (ans >= 0) {            return ans;        }        return ans;    }}