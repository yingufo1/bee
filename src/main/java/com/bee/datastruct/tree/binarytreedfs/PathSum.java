package com.bee.datastruct.tree.binarytreedfs;import com.bee.datastruct.tree.TreeNode;import java.util.HashMap;import java.util.Map;/** * 剑指 Offer II 050. 向下的路径节点之和：https://leetcode.cn/problems/path-sum-iii/ * * @author yangying * @version 1.0 * @since 2022/5/26 **/public class PathSum {    public int pathSum(TreeNode root, int targetSum) {        Map<Integer, Integer> prefix = new HashMap<>();        prefix.put(0, 1);        return dfs(root, prefix, 0, targetSum);    }    private int dfs(TreeNode root, Map<Integer, Integer> prefix, int path, int targetSum) {        if (root == null) {            return 0;        }        path += root.val;        int count = prefix.getOrDefault(path - targetSum, 0);        prefix.put(path, prefix.getOrDefault(path, 0) + 1);        count += dfs(root.left, prefix, path, targetSum);        count += dfs(root.right, prefix, path, targetSum);        prefix.put(path, prefix.get(path) - 1);        return count;    }}