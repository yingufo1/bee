package com.bee.datastruct.tree.binarysearchtree;import com.bee.datastruct.tree.TreeNode;import java.util.ArrayDeque;import java.util.Queue;/** * 剑指 Offer II 052. 展平二叉搜索树:https://leetcode.cn/problems/NYBBNL/ * * @author yangying * @version 1.0 * @since 2022/5/28 **/public class IncreasingBST {    public TreeNode increasingBST(TreeNode root) {        Queue<TreeNode> queue = new ArrayDeque<>();        dfs(root,queue);        root = queue.peek();        while (!queue.isEmpty()){            TreeNode node = queue.poll();            node.right = queue.peek();        }        return root;    }    private void dfs(TreeNode root, Queue<TreeNode> queue) {        if (root.left != null) {            dfs(root.left, queue);        }        queue.add(new TreeNode(root.val));        if (root.right != null) {            dfs(root.right, queue);        }    }}