package com.bee.datastruct.tree.binarysearchtree;import com.bee.datastruct.tree.TreeNode;import java.util.Deque;import java.util.LinkedList;/** * 剑指 Offer II 055. 二叉搜索树迭代器:https://leetcode.cn/problems/kTOapQ/ * * @author yangying * @version 1.0 * @since 2022/5/28 **/public class BSTIterator {    private TreeNode cur;    private Deque<TreeNode> stack;    public BSTIterator(TreeNode root) {        cur = root;        stack = new LinkedList<TreeNode>();    }    public int next() {        while (cur != null) {            stack.push(cur);            cur = cur.left;        }        cur = stack.pop();        int ret = cur.val;        cur = cur.right;        return ret;    }    public boolean hasNext() {        return cur != null || !stack.isEmpty();    }}/** * Your BSTIterator object will be instantiated and called as such: * BSTIterator obj = new BSTIterator(root); * int param_1 = obj.next(); * boolean param_2 = obj.hasNext(); */