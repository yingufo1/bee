package com.bee.datastruct.queue.binraytreebfs;import java.util.ArrayDeque;import java.util.Queue;/** * 剑指 Offer II 045. 二叉树最底层最左边的值：https://leetcode.cn/problems/LwUNpT/ * * @author yangying * @version 1.0 * @since 2022/5/25 **/public class FindBottomLeftValue {    public int findBottomLeftValue(TreeNode root) {        int current = 0;        int next = 0;        TreeNode lastLeft = null;        boolean isNewLayer = false;        Queue<TreeNode> queue = new ArrayDeque<>();        if (root != null) {            current = 1;            queue.offer(root);            lastLeft = root;        }        while (!queue.isEmpty()) {            TreeNode node = queue.poll();            current--;            if (node.left != null) {                if (isNewLayer) {                    lastLeft = node.left;                    isNewLayer = false;                }                queue.offer(node.left);                next++;            }            if (node.right != null) {                if (isNewLayer) {                    lastLeft = node.right;                    isNewLayer = false;                }                queue.offer(node.right);                next++;            }            if(current == 0){                isNewLayer = true;                current = next;                next =0;            }        }        return lastLeft.val;    }}