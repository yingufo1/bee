package com.bee.datastruct.queue.binraytreebfs;import java.util.*;/** * 剑指 Offer II 043. 往完全二叉树添加节点:https://leetcode.cn/problems/NaqhDT/ * * @author yangying * @version 1.0 * @since 2022/5/25 **/public class CBTInserter {    private final List<TreeNode> treeQueue;    private final Queue<TreeNode> searchQueue;    /**     * 数组队列表示完全二叉树，根节点是i，则左孩子是2i，右孩子是2i+1     *     * @param root     */    public CBTInserter(TreeNode root) {        treeQueue = new ArrayList<>();        searchQueue = new LinkedList<>();        //先序遍历        bfs(root);    }    private void bfs(TreeNode root) {        if (root != null) {            treeQueue.add(root);        } else {            return;        }        if (root.left != null) {            searchQueue.add(root.left);        }        if (root.right != null) {            searchQueue.add(root.right);        }        bfs(searchQueue.poll());    }    public int insert(int v) {        TreeNode node = new TreeNode(v);        treeQueue.add(node);        TreeNode parent = treeQueue.get(treeQueue.size() / 2 - 1);        if(treeQueue.size()%2==0){            parent.left = node;        }else {            parent.right = node;        }        return parent.val;    }    public TreeNode get_root() {        return treeQueue.get(0);    }}/** * Your CBTInserter object will be instantiated and called as such: * CBTInserter obj = new CBTInserter(root); * int param_1 = obj.insert(v); * TreeNode param_2 = obj.get_root(); */