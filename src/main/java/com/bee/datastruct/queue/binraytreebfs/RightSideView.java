package com.bee.datastruct.queue.binraytreebfs;import com.bee.datastruct.tree.TreeNode;import java.util.ArrayDeque;import java.util.ArrayList;import java.util.List;import java.util.Queue;/** * 剑指 Offer II 046. 二叉树的右侧视图:https://leetcode.cn/problems/WNC0Lk/ * * @author yangying * @version 1.0 * @since 2022/5/25 **/public class RightSideView {    public List<Integer> rightSideView(TreeNode root) {        int current = 0;        int next = 0;        List<Integer> rights = new ArrayList<>();        Queue<TreeNode> queue = new ArrayDeque<>();        if (root != null) {            queue.offer(root);            current = 1;        }        while (!queue.isEmpty()) {            TreeNode node = queue.poll();            current--;            if (node.left != null) {                queue.offer(node.left);                next++;            }            if(node.right != null){                queue.offer(node.right);                next++;            }            if(current == 0){                rights.add(node.val);                current = next;                next =0;            }        }        return rights;    }}