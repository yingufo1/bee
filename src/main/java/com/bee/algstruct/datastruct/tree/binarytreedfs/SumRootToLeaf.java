package com.bee.algstruct.datastruct.tree.binarytreedfs;import com.bee.algstruct.datastruct.tree.TreeNode;/** * 1022. 从根到叶的二进制数之和:https://leetcode.cn/problems/sum-of-root-to-leaf-binary-numbers/ * * @author yangying * @version 1.0 * @since 2022/5/30 **/public class SumRootToLeaf {    public int sumRootToLeaf(TreeNode root) {        return sumRootToLeaf(root,0);    }    public int sumRootToLeaf(TreeNode root,int sum) {        if (root == null) {            return sum;        }        sum = sum*2 + root.val;        if(root.left ==null && root.right == null){            return sum;        }        return sumRootToLeaf(root.left,sum) + sumRootToLeaf(root.right,sum);    }}/** *  private int sum; * *     public int sumRootToLeaf(TreeNode root) { *         if (root == null) { *             return 0; *         } * *         if (root.left != null || root.right != null) { *             sum = sum * 2 + root.val; *         } else { *             sum += root.val; *         } * *         sum += sumRootToLeaf(root.left); *         sum += sumRootToLeaf(root.right); * *         return sum; *     } */