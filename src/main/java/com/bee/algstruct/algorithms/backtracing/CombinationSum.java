package com.bee.algstruct.algorithms.backtracing;import java.util.ArrayList;import java.util.List;/** * 剑指 Offer II 081. 允许重复选择元素的组合:https://leetcode.cn/problems/Ygoe9J/ * * @author yangying * @version 1.0 * @since 2022/5/31 **/public class CombinationSum {    public List<List<Integer>> combinationSum(int[] candidates, int target) {        List<List<Integer>> result = new ArrayList<>();        sum(candidates, target, 0, result, new ArrayList<>());        return result;    }    private void sum(int[] candidates, int target, int index, List<List<Integer>> result, List<Integer> subset) {        if (target == 0) {            result.add(new ArrayList<>(subset));        } else if (target > 0 && index < candidates.length) {            sum(candidates, target, index + 1, result, subset);            subset.add(candidates[index]);            sum(candidates, target-candidates[index], index, result, subset);            subset.remove(subset.size() - 1);        }    }}