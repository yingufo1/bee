package com.bee.algstruct.algorithms.backtracing;import java.util.*;/** * 剑指 Offer II 083. 没有重复元素集合的全排列:https://leetcode.cn/problems/VvJkup/ * * @author yangying * @version 1.0 * @since 2022/5/31 **/public class Permute {    public List<List<Integer>> permute(int[] nums) {        List<List<Integer>> result = new ArrayList<>();        permute(nums, 0, result);        return result;    }    private void permute(int[] nums, int index, List<List<Integer>> result) {        if (index == nums.length) {            List<Integer> permute = new ArrayList<>();            for (int i : nums) {                permute.add(i);            }            result.add(permute);        } else {            for (int j = index; j < nums.length; ++j) {                swap(nums, index, j);                permute(nums, index + 1, result);                swap(nums, index, j);            }        }    }    private void swap(int[] nums, int i, int j) {        if (i == j) {            return;        }        int temp = nums[i];        nums[i] = nums[j];        nums[j] = temp;    }}