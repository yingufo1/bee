package com.bee.algstruct.algorithms.dynamicprogramming.singleseq;/** * 剑指 Offer II 092. 翻转字符：https://leetcode.cn/problems/cyJERH/ * * @author yangying * @version 1.0 * @since 2022/6/2 **/public class MinFlipsMonoIncr {    /**     * 输入：s = "00110"     * 输出：1     * 解释：我们翻转最后一位得到 00111.     * <p>     * 输入：s = "00011000"     * 输出：2     * 解释：我们翻转得到 00000000。     *     * @param s     * @return     */    public int minFlipsMonoIncr(String s) {        int one = 0;        int dp = 0;        for(int i = 0; i < s.length() ; i++){            char c = s.charAt(i);            if(c == '0'){  //当前等于 0 ，看反转前面全是 1 的为0 和 反转当前为1的代价哪个大                dp=Math.min(one, dp+1);            }else{                ++one;//记录前面为1 的个数            }        }        return dp;    }}