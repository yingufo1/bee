package com.bee.algstruct.algorithms.search.binary;/** * 剑指 Offer II 073. 狒狒吃香蕉：https://leetcode.cn/problems/nZZqjQ/ * * @author yangying * @version 1.0 * @since 2022/5/30 **/public class MinEatingSpeed {    public int minEatingSpeed(int[] piles, int h) {        int max = Integer.MIN_VALUE;        for (int pile : piles) {            max = Math.max(max, pile);        }        int left = 1;        int right = max;        while (left <= right) {            int mid = left + (right - left) / 2;            int hours = getHours(piles, mid);            if (hours <= h) {                if (mid == 1 || getHours(piles, mid - 1) > h) {                    return mid;                }                right = mid - 1;            } else {                left = mid + 1;            }        }        return -1;    }    private int getHours(int[] piles, int speed) {        int hours = 0;        for (int pile : piles) {            hours += (pile + speed - 1) / speed;        }        return hours;    }}