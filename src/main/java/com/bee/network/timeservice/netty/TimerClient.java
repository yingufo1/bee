package com.bee.network.timeservice.netty;import io.netty.bootstrap.Bootstrap;import io.netty.channel.ChannelFuture;import io.netty.channel.ChannelInitializer;import io.netty.channel.ChannelOption;import io.netty.channel.EventLoopGroup;import io.netty.channel.nio.NioEventLoopGroup;import io.netty.channel.socket.SocketChannel;import io.netty.channel.socket.nio.NioSocketChannel;/** * TODO:class description * * @author yangying * @version 1.0 * @since 2022/7/13 **/public class TimerClient {    public static void main(String[] args) {        String host = "127.0.0.1";        int port = 8080;        EventLoopGroup client = new NioEventLoopGroup();        Bootstrap boot = new Bootstrap();        boot.group(client).channel(NioSocketChannel.class).option(ChannelOption.SO_KEEPALIVE,true)                .handler(new ChannelInitializer<SocketChannel>() {                    @Override                    protected void initChannel(SocketChannel ch) throws Exception {                        ch.pipeline().addLast(new TimerClientHandler());                    }                });        ChannelFuture f = boot.connect(host,port);        try {            f.channel().closeFuture().sync();        } catch (InterruptedException e) {            throw new RuntimeException(e);        }finally {            client.shutdownGracefully();        }    }}