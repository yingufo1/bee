package com.bee.network.timeservice.netty;import io.netty.buffer.ByteBuf;import io.netty.buffer.Unpooled;import io.netty.channel.ChannelHandlerContext;import io.netty.channel.ChannelInboundHandlerAdapter;import java.util.Arrays;import java.util.LinkedList;import java.util.Queue;/** * TODO:class description * * @author yangying * @version 1.0 * @since 2022/7/13 **/public class TimerClientHandler extends ChannelInboundHandlerAdapter {    private int counter;    @Override    public void channelActive(ChannelHandlerContext ctx) {        byte[] writeBytes = (Constant.REQ_ORDER+System.getProperty("line.separator")).getBytes();        for(int i=0;i<300;i++){            ByteBuf writeBuf = Unpooled.buffer(writeBytes.length);            writeBuf.writeBytes(writeBytes);            ctx.writeAndFlush(writeBuf);        }    }    @Override    public void channelRead(ChannelHandlerContext ctx, Object msg) {        ByteBuf responseBuf = (ByteBuf) msg;        byte[] bytes = new byte[responseBuf.readableBytes()];        responseBuf.readBytes(bytes);        System.out.println("receive response:"+new String(bytes)+" for "+ ++counter);        try {            //ctx.close();        }finally {            //response.release();        }    }    @Override    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {        cause.printStackTrace();        ctx.close();    }}